generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
	ADMIN
	USER
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
	password			String?
	role 			    UserRole @default(USER)
  accounts      Account[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}



model MenuCategory {
  id          String     @id @default(cuid())
  name        String
  description String?
  order       Int        @default(0)
  isActive    Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  items       MenuItem[]
}

model MenuItem {
  id          String       @id @default(cuid())
  title       String
  description String?
  price       Decimal      @db.Decimal(10, 2)
  oldPrice    Decimal?     @db.Decimal(10, 2)
  image       String?
  isActive    Boolean      @default(true)
  isAvailable Boolean      @default(true)
  isOnSale    Boolean      @default(false)
  order       Int          @default(0)
  categoryId  String
  category    MenuCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Promotion {
  id          String   @id @default(cuid())
  title       String
  description String?   @db.Text
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}